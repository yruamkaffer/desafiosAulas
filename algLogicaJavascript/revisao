- sintaxe e boas pr√°ticas
    
    ```jsx
    // ponto e v√≠rgula √© facultativo
    const myConst = "constante"
    
    // escrever com calmelCase
    const myConst2 = "constante2"
    
    // procurar escrever c√≥digo em ingl√™s 
    // para treinar, aumentar as oportunidades futuras
    function doSomething(myArgument) {}
    ```
    
- vari√°veis
    
    ```jsx
    const
    let
    var
    ```
    
- tipos de dados
    
    ```jsx
    String 
    Number
    Boolean
    undefined  
    null
    ```
    
- estrutura de dados
    
    ```jsx
    // Array
    const myArray = [1, 2, "a", "b", true]
    
    // Object
    const myObject = { property: "value" }
    ```
    
- fun√ß√µes
    
    ```jsx
    // 1. Cria√ß√£o e tipos de fun√ß√µes
    // named
    function myFunction() {}
    
    // Anonymous
    const myFunction = function() {}
    
    // Arrow
    const myFunction = () => {}
    
    // arguments & return
    function sum(a, b) {
    	return a + b
    }
    
    const sum = (a, b) => a + b
    
    // 2. Excecu√ß√£o
    myFunction()
    sum(1, 2)
    ```
    
- fluxo da aplica√ß√£o
    
    ```jsx
    // if, else if, else
    const isRainning = true
    if (isRainning) {
    	alert("Est√° chovendo, pega o guarda chuvas üåß")
    } else {
    	alert("Dia limpo ‚õÖÔ∏è")
    }
    
    // switch
    const water = "com g√°s"
    
    switch(water) {
    	case "com g√°s": 
    		alert("Essa √°gua √© com g√°s")
    		break
    	case "sem g√°s":
    		alert("Essa √°gua √© sem g√°s")
    		break
    	case "da fonte":
    		alert("√Ågua fresquiha da fonte")
    		break	
    	default:
    		alert("cad√™ minha √°gua?")
    }
    ```
    
- estrutura de repeti√ß√£o
    
    ```jsx
    // while
    let play = true
    while(play) {
    	// fazer algo at√© o play ser falso
    	// criar uma l√≥gica para o play se tornar falso
    	// se n√£o, loop eterno
    }
    
    // for (tradicional)
    let text = "abc"
    for (let i = 0; i < text.length; i++){
    	alert(text[i])
    }
    
    // for..of
    for (let char of text) {
    	alert(char)
    }
    ```
    
- operadores